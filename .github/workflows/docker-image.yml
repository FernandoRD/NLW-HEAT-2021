name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:
  
jobs:

  CI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
#    - name: Build the Docker image
#      run: docker build . --file Dockerfile --tag teste-de-deploy:$(date +%s)

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@42d299face0c5c43a0487c477f595ac9cf22f1a7
      uses: docker/login-action@v1.12.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        #registry: # optional
        # Username used to log against the Docker registry
        username: ${{ secrets.DOCKERHUB_USER }} # optional
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.DOCKERHUB_PASSWORD }} # optional
        # Specifies whether the given registry is ECR (auto, true or false)
        #ecr: # optional, default is auto
        # Log out from the Docker registry at the end of a job
        #logout: # optional, default is true
        
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@1814d3dfb36d6f84174e61f4a4b05bd84089a4b9
      uses: docker/build-push-action@v2.8.0
      with:
        # List of extra privileged entitlement (e.g., network.host,security.insecure)
        #allow: # optional
        # List of build-time variables
        #build-args: # optional
        # Builder instance
        #builder: # optional
        # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
        #cache-from: # optional
        # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
        #cache-to: # optional
        # Optional parent cgroup for the container used in the build
        #cgroup-parent: # optional
        # Build's context is the set of files located in the specified PATH or URL
        context: . # optional
        # Path to the Dockerfile
        file: Dockerfile # optional
        # List of metadata for an image
        #labels: # optional
        # Load is a shorthand for --output=type=docker
        #load: # optional, default is false
        # Set the networking mode for the RUN instructions during build
        #network: # optional
        # Do not use cache when building the image
        #no-cache: # optional, default is false
        # List of output destinations (format: type=local,dest=path)
        #outputs: # optional
        # List of target platforms for build
        #platforms: # optional
        # Always attempt to pull a newer version of the image
        #pull: # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: true # optional, default is false
        # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
        #secrets: # optional
        # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
        #secret-files: # optional
        # Size of /dev/shm (e.g., 2g)
        #shm-size: # optional
        # List of SSH agent socket or keys to expose to the build
        #ssh: # optional
        # List of tags
        tags: # optional
          fernandord/nlw-heat-image:latest,
          fernandord/nlw-heat-image:v${{ github.run_number }}
        # Sets the target stage to build
        #target: # optional
        # Ulimit options (e.g., nofile=1024:1024)
        #ulimit: # optional
        # GitHub Token used to authenticate against a repository for Git context
        #github-token: # optional, default is ${{ github.token }}
  CD:
    needs: [CI]
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      
      - name: Kubernetes Set Context
        uses: Azure/k8s-set-context@v2
        with:
          # Acceptable values: generic or arc
          #cluster-type: # default is generic
          # Acceptable values: kubeconfig or service-account or service-principal
          method: # default is kubeconfig
            kubeconfig
          # Contents of kubeconfig file
          kubeconfig: # optional
            ${{ secrets.KUBECONFIG }}
          # If your kubeconfig has multiple contexts, use this field to use a specific context, otherwise the default one would be chosen
          #context: # optional
          # Cluster Url
          #k8s-url: # optional
          # Service account secret (run kubectl get serviceaccounts <service-account-name> -o yaml and copy the service-account-secret-name)
          #k8s-secret: # optional
          # Token extracted from the secret of service account (should be base 64 decoded)
          #token: # optional
          # Azure resource group name
          #resource-group: # optional
          # Azure connected cluster name
          #cluster-name: # optional
          
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1.5
        with:
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          #namespace: # optional
          
          # Path to the manifest files which will be used for deployment.
          manifests: # default is 
            ./k8s/deployment2.yaml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: # optional
            fernandord/nlw-heat-image:v${{ github.run_number }}
          
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: # optional
            ${{ secrets.DOCKERHUB_PASSWORD }}
          
          # Version of kubectl. Installs a specific version of kubectl binary
          #kubectl-version: # optional
          
          # Deployment strategy to be used. Allowed values are none, canary and blue-green
          #strategy: # optional, default is none
          
          # Route based on service, ingress or SMI for blue-green strategy
          #route-method: # optional, default is service
          
          # Indicates the buffer time in minutes before the switch is made to the green version (max is 300 min ie. 5hrs)
          #version-switch-buffer: # optional, default is 0
          
          # Traffic split method to be used. Allowed values are pod, smi
          #traffic-split-method: # optional, default is pod
          
          # Baseline and canary replicas count; valid value i.e between 0 to 100.
          #baseline-and-canary-replicas: # optional, default is 0
          
          # Percentage of traffic redirect to canary deployment
          #percentage: # optional, default is 0
          
          # Arguments
          #args: # optional
          
          # deploy/promote/reject
          #action: # default is deploy
          
          # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
          #force: # optional
          
          # Github token
          #token: # default is ${{ github.token }}
